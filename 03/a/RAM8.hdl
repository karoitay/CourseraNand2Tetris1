// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address, a=Reg0Load, b=Reg1Load, c=Reg2Load,
              d=Reg3Load, e=Reg4Load, f=Reg5Load, g=Reg6Load, h=Reg7Load);
    Register (in=in, load=Reg0Load, out=Reg0Out);
    Register (in=in, load=Reg1Load, out=Reg1Out);
    Register (in=in, load=Reg2Load, out=Reg2Out);
    Register (in=in, load=Reg3Load, out=Reg3Out);
    Register (in=in, load=Reg4Load, out=Reg4Out);
    Register (in=in, load=Reg5Load, out=Reg5Out);
    Register (in=in, load=Reg6Load, out=Reg6Out);
    Register (in=in, load=Reg7Load, out=Reg7Out);
    Mux8Way16 (a=Reg0Out, b=Reg1Out, c=Reg2Out, d=Reg3Out,
               e=Reg4Out, f=Reg5Out, g=Reg6Out, h=Reg7Out,
               sel=address, out=out);
}